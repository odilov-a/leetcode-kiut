<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>UzContest - Train Your Brain!</title>
  <link rel="icon" href="https://cdn.uzcontest.uz/uploads/logo.png" type="image/x-icon">
  <meta name="description" content="UzContest - Train Your Brain!">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">UzContest</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" href="/about">About</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/contact">Contact</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" target="_blank" href="https://upskill.uzcontest.uz/">Login</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <div class="container mt-5">
    <h1 class="text-center">Contact UzContest</h1>
    <div class="row justify-content-center">
      <div class="col-md-8">
        <form id="contact-form" method="post">
          <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input type="text" class="form-control" id="name" name="name" placeholder="John Doe" required>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" placeholder="example@mail.com"
              pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$">
          </div>
          <div class="mb-3">
            <label for="number" class="form-label">Phone number</label>
            <input type="tel" class="form-control" id="number" name="number" placeholder="+998 XX XXX XX XX" required>
          </div>
          <div class="mb-3">
            <label for="message" class="form-label">Message</label>
            <textarea class="form-control" id="message" name="message" rows="5"
              placeholder="Write message here..."></textarea>
          </div>
          <div class="text-center d-grid gap-2 col-6 mx-auto">
            <button type="submit" class="btn btn-primary">Submit</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <script>
    const TELEGRAM_BOT_TOKEN = "7870427041:AAFD6rpBBaljYQBw3vHAriYyVSUTn5LIZKo";
    const TELEGRAM_CHAT_ID = "-1002334930076";
    document.getElementById("contact-form").addEventListener("submit", async function (event) {
      event.preventDefault();
      const formData = new FormData(event.target);
      const name = formData.get("name");
      const email = formData.get("email");
      const number = formData.get("number");
      const message = formData.get("message");
      const text = `Saytdan xabar keldi:\nðŸ‘¤ Ism: ${name}\nðŸ“± Telefon raqami: ${number}\nðŸ“§ Email: ${email} \nðŸ’¬ Xabar: ${message}`;
      try {
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            chat_id: TELEGRAM_CHAT_ID,
            text: text,
          }),
        });
        const result = await response.json();
        if (response.ok) {
          Swal.fire({
            title: "Message sent!",
            text: "We will get back to you soon.",
            icon: "success"
          });
        } else {
          Swal.fire({
            title: "Failed to send message!",
            text: result.description,
            icon: "error"
          });
        }
        event.target.reset();
      } catch (error) {
        Swal.fire({
          title: "Failed to send message!",
          text: error.message,
          icon: "error"
        });
      }
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>
</body>

</html>